import java.io.*;
import java.util.*;

class Student {
    int studentId;
    String name, rollNo, studentClass, address;
    double marks;

    // Constructor
    Student(int studentId, String name, String rollNo, String studentClass, double marks, String address) {
        this.studentId = studentId;
        this.name = name;
        this.rollNo = rollNo;
        this.studentClass = studentClass;
        this.marks = marks;
        this.address = address;
    }

    // Convert student data to a string
    public String toString() {
        return studentId + "," + name + "," + rollNo + "," + studentClass + "," + marks + "," + address;
    }
}

class StudentDatabase {

    static final String FILE_NAME = "students.txt";

    // Create database by writing records to a file
    public static void createDatabase(List<Student> students) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(FILE_NAME))) {
            for (Student student : students) {
                writer.write(student.toString());
                writer.newLine();
            }
        } catch (IOException e) {
            System.out.println("Error creating database: " + e.getMessage());
        }
    }

    // Display all student records from the file
    public static void displayDatabase() {
        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_NAME))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");
                System.out.println("ID: " + data[0] + ", Name: " + data[1] + ", Roll No: " + data[2] + ", Class: " + data[3] + ", Marks: " + data[4] + ", Address: " + data[5]);
            }
        } catch (IOException e) {
            System.out.println("Error displaying database: " + e.getMessage());
        }
    }

    // Delete record by studentId
    public static void deleteRecord(int studentId) {
        File tempFile = new File("temp.txt");
        File originalFile = new File(FILE_NAME);
        try (BufferedReader reader = new BufferedReader(new FileReader(originalFile));
             BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile))) {
            String line;
            while ((line = reader.readLine()) != null) {
                if (!line.startsWith(String.valueOf(studentId))) {
                    writer.write(line);
                    writer.newLine();
                }
            }
            originalFile.delete();
            tempFile.renameTo(originalFile);
        } catch (IOException e) {
            System.out.println("Error deleting record: " + e.getMessage());
        }
    }

    // Update record by studentId
    public static void updateRecord(int studentId, Student updatedStudent) {
        File tempFile = new File("temp.txt");
        File originalFile = new File(FILE_NAME);
        try (BufferedReader reader = new BufferedReader(new FileReader(originalFile));
             BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile))) {
            String line;
            while ((line = reader.readLine()) != null) {
                if (line.startsWith(String.valueOf(studentId))) {
                    writer.write(updatedStudent.toString());
                } else {
                    writer.write(line);
                }
                writer.newLine();
            }
            originalFile.delete();
            tempFile.renameTo(originalFile);
        } catch (IOException e) {
            System.out.println("Error updating record: " + e.getMessage());
        }
    }

    // Search for a student record by studentId
    public static void searchRecord(int studentId) {
        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_NAME))) {
            String line;
            while ((line = reader.readLine()) != null) {
                if (line.startsWith(String.valueOf(studentId))) {
                    String[] data = line.split(",");
                    System.out.println("Found: ID: " + data[0] + ", Name: " + data[1] + ", Roll No: " + data[2] + ", Class: " + data[3] + ", Marks: " + data[4] + ", Address: " + data[5]);
                    return;
                }
            }
            System.out.println("Student not found.");
        } catch (IOException e) {
            System.out.println("Error searching record: " + e.getMessage());
        }
    }
}

public class Main {

    public static void main(String[] args) {
        // Creating some sample students
        List<Student> students = new ArrayList<>();
        students.add(new Student(1, "Alice", "101", "10th", 95.5, "123 Main St"));
        students.add(new Student(2, "Bob", "102", "11th", 88.0, "456 Oak St"));
        students.add(new Student(3, "Charlie", "103", "12th", 92.3, "789 Pine St"));

        // Create the database
        StudentDatabase.createDatabase(students);

        // Display the database
        System.out.println("Displaying database:");
        StudentDatabase.displayDatabase();

        // Search for a student
        System.out.println("\nSearching for student with ID 2:");
        StudentDatabase.searchRecord(2);

        // Update a student record
        System.out.println("\nUpdating student with ID 2:");
        Student updatedStudent = new Student(2, "Bob", "102", "11th", 90.0, "Updated Address");
        StudentDatabase.updateRecord(2, updatedStudent);

        // Display the updated database
        System.out.println("\nDisplaying updated database:");
        StudentDatabase.displayDatabase();

        // Delete a student record
        System.out.println("\nDeleting student with ID 3:");
        StudentDatabase.deleteRecord(3);

        // Display the final database
        System.out.println("\nDisplaying final database:");
        StudentDatabase.displayDatabase();
    }
}


